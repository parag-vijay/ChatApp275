syntax = "proto2";
option optimize_for = SPEED;
option java_package = "routing";

message ClientRoute {
    // a node should not have a value though this is not enforced
    required int64 id = 1;
    optional Path path = 2;
//     required string path = 2;
//     required string payload = 3; 
    
    oneof payload{
	    NetworkDiscoveryPacket networkDiscoveryPacket = 3;
	    User user = 4;
	    Message message = 5;
    }
    
    	enum Path {
	    PING = 0;
	    NETWORK_DISCOVERY = 1;
	    USER = 2;
	    MESSAGE = 3;
	    GROUP = 4;
	}
}

 message Message {
     // a node should not have a value though this is not enforced
     required Type type = 1;
     required string sender = 2;
     required string payload = 3;
     required string to = 4; // would be groupId if the type is GROUP or else userId if the type is SINGLE
     required string timestamp = 5;
     required Status status = 6;
     
 	enum Type{
    SINGLE = 0;
    GROUP = 1;
    }
    
    enum Status{
    ACTIVE = 0;
    STALE = 1;
    }
 }
 
message User {
     // a node should not have a value though this is not enforced
     required string email = 1;
     optional string password = 2;
     optional string recentActiveTime = 3;
 }


 
 message NetworkDiscoveryPacket{
 	

    
    required Mode mode = 1;
    required Sender sender = 2 [default = SERVER_NODE];
    optional string groupTag = 3; //If sender is a server node, then this field can contain its group id. If sender is end user client, then this field is not required.
    optional string nodeId = 4; //node id of the sender
    required string nodeAddress = 5;
    required string nodePort = 6;
    required string secret = 7;
    
    enum Sender{
	    EXTERNAL_SERVER_NODE = 0;
	    INTERNAL_SERVER_NODE = 1;
	    END_USER_CLIENT = 2;
	    SERVER_NODE = 3;
    }
    
    	enum Mode{
	    REQUEST=0;
	    RESPONSE=1;
    }
 
 }
